name: Release

on:
    push:
        branches:
            - main
            - master
    workflow_dispatch:
        inputs:
            release_type:
                description: 'Release type'
                required: true
                default: 'patch'
                type: choice
                options:
                    - patch
                    - minor
                    - major
                    - prerelease

jobs:
    release:
        runs-on: ubuntu-latest
        if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && contains(github.event.head_commit.message, 'chore(release):'))

        permissions:
            contents: write
            pull-requests: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Configure Git
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"

            - name: Run quality checks
              run: |
                  npm run lint
                  npm run format:check
                  npm run build
                  npm test

            - name: Generate release (manual)
              if: github.event_name == 'workflow_dispatch'
              run: |
                  case "${{ github.event.inputs.release_type }}" in
                    "major")
                      npm run release:major
                      ;;
                    "minor")
                      npm run release:minor
                      ;;
                    "prerelease")
                      npm run release:prerelease
                      ;;
                    *)
                      npm run release:patch
                      ;;
                  esac

            - name: Generate release (automatic)
              if: github.event_name == 'push'
              run: npm run release

            - name: Push changes
              run: |
                  git push --follow-tags origin HEAD

            - name: Extract release info
              id: release_info
              run: |
                  VERSION=$(node -p "require('./package.json').version")
                  echo "version=v$VERSION" >> $GITHUB_OUTPUT

                  # Extract changelog for this version
                  CHANGELOG=$(awk "/^## \[${VERSION}\]/{flag=1; next} /^## \[/{flag=0} flag" CHANGELOG.md)
                  echo "changelog<<EOF" >> $GITHUB_OUTPUT
                  echo "$CHANGELOG" >> $GITHUB_OUTPUT
                  echo "EOF" >> $GITHUB_OUTPUT

            - name: Create GitHub Release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ steps.release_info.outputs.version }}
                  release_name: Release ${{ steps.release_info.outputs.version }}
                  body: |
                      ## What's Changed

                      ${{ steps.release_info.outputs.changelog }}

                      **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.release_info.outputs.previous_version }}...${{ steps.release_info.outputs.version }}
                  draft: false
                  prerelease: ${{ contains(steps.release_info.outputs.version, '-') }}
